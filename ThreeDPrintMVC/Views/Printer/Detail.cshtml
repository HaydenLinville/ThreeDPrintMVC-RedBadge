@model Models.PrinterModels.PrinterDetail

@{
    ViewBag.Title = "Detail";
}

<h2>@Model.PrinterModel.ToString()</h2>

<div>

    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.PrinterBrand)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PrinterBrand)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PrinterModel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PrinterModel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HasDualExtruder)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HasDualExtruder)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CanAutoLevel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CanAutoLevel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HasHeatedBed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HasHeatedBed)
        </dd>
        <dt>
            @Html.DisplayNameFor(model=> model.Image)
        </dt>
        <dd>
            <img src="/Printer/RetrieveImage/@Model.PrinterId" alt="" height="100" width="200"/> 
        </dd>
    </dl>
    <div class="dl-horizontal">
        <div class="col-md-offset-0 col-md-12 ">
            <input type="button" value="Edit" class="btn btn-warning" onclick="window.location= '@Url.Action("Edit", "Printer", new {id = Model.PrinterId}, null )'" />
            <input type="button" value="Delete" class="btn btn-danger" onclick="window.location= '@Url.Action("Delete", "Printer", new {id = Model.PrinterId})'" />
            <input type="button" value="Back to Printers" class="btn btn-default" onclick="window.location= '@Url.Action("Index", "Printer")'" />
        </div>

        <br />
    </div>
    @if (Model.Settings.Count() != 0)
    {

        <table class="table">
            <br />
            <h2>Custom Settings for @Model.PrinterModel.ToString(): </h2>

            @if (TempData.ContainsKey("SettingSave"))
            {

                <div class="alert alert-success fade in" role="alert">
                    <button type="button" class="close" data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                    @TempData["SettingSave"]
                </div>
            }
            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.Settings.First().CustomSettingName)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Settings.First().MaterialType)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Settings.First().Color)
                </th>


                <th>
                    @Html.DisplayNameFor(model => model.Settings.First().BedTemp)
                </th>


                <th>
                    @Html.DisplayNameFor(model => model.Settings.First().MaterialTemp)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Settings.First().Speed)
                </th>
            </tr>
            @foreach (var m in Model.Settings)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelI => m.CustomSettingName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelI => m.MaterialType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelI => m.Color)
                    </td>

                    <td>
                        @Html.DisplayFor(modelI => m.BedTemp)
                    </td>


                    <td>
                        @Html.DisplayFor(modelI => m.MaterialTemp)
                    </td>
                    <td>
                        @Html.DisplayFor(modelI => m.Speed)
                    </td>
                    <td>
                        <input type="button" value="Edit" class="btn btn-warning btn-xs" onclick="window.location = '@Url.Action("Edit", "Setting", new {id = m.SettingId})'" />
                        <input type="button" value="Delete" class="btn btn-danger btn-xs" onclick="window.location = '@Url.Action("Delete", "Setting", new {id = m.SettingId})'" />
                    </td>
                </tr>
            }

        </table>
    }
    <br />
    <div class="col-md-offset-0 col-md-12 ">
        <input type="button" value="Add New Custom Settings" class="btn btn-primary" onclick="window.location= '@Url.Action("Create", "Setting", new {id = Model.PrinterId})'" />
    </div>
    <br />
</div>

