@model Models.Material.MaterialEdit

@{
    ViewBag.Title = "Edit";
}

<h2 class="text-white p-3 rounded-pill" style="background-image:url(../../Content/img/yellow.jpeg)">Update @Model.MaterialBrand</h2>


@using (Html.BeginForm("Edit", "Material", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="col text-white">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaterialId)



        <div class="col">


            <div class="form-group">
                @Html.LabelFor(model => model.MaterialBrand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.EditorFor(model => model.MaterialBrand, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaterialBrand, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.MaterialType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.MaterialType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaterialType, "", new { @class = "text-danger" })
                    </div>
                </div>



                
                <div class="row">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="ImageData" id="ImageData" onchange="filecheck(this);" />
                    </div>
                </div>


                <div class="row">
                    <p class="col-md-2">Current Image</p>
                    @if (Model.Image != null && Model.Image.Length > 0)
                    {

                        <div class="ml-md-2"><img class="img-fluid" width="150" height="150" src="/Material/RetrieveMImage/@Model.MaterialId" /></div>
                    }
                    else
                    {
                        <div class="ml-md-2"><p>None</p></div>
                    }
                </div>




            </div>

        </div>
    <div class="row">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />

            <input type="button" value="Cancel" class="btn btn-secondary" onclick="goPrev()" />
            <script>
                function goPrev() { window.history.back(); }
            </script>
        </div>
    </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
